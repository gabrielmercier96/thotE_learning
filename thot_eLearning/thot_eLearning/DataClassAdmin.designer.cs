#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace thot_eLearning
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DataBaseSchool")]
	public partial class DataClassAdminDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCour(Cour instance);
    partial void UpdateCour(Cour instance);
    partial void DeleteCour(Cour instance);
    #endregion
		
		public DataClassAdminDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DataBaseSchoolConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassAdminDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassAdminDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassAdminDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassAdminDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Cour> Cours
		{
			get
			{
				return this.GetTable<Cour>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cours")]
	public partial class Cour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdCours;
		
		private string _Nom;
		
		private string _Description;
		
		private string _Prerequis;
		
		private string _NbModules;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdCoursChanging(int value);
    partial void OnIdCoursChanged();
    partial void OnNomChanging(string value);
    partial void OnNomChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPrerequisChanging(string value);
    partial void OnPrerequisChanged();
    partial void OnNbModulesChanging(string value);
    partial void OnNbModulesChanged();
    #endregion
		
		public Cour()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCours", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdCours
		{
			get
			{
				return this._IdCours;
			}
			set
			{
				if ((this._IdCours != value))
				{
					this.OnIdCoursChanging(value);
					this.SendPropertyChanging();
					this._IdCours = value;
					this.SendPropertyChanged("IdCours");
					this.OnIdCoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom", DbType="VarChar(50)")]
		public string Nom
		{
			get
			{
				return this._Nom;
			}
			set
			{
				if ((this._Nom != value))
				{
					this.OnNomChanging(value);
					this.SendPropertyChanging();
					this._Nom = value;
					this.SendPropertyChanged("Nom");
					this.OnNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prerequis", DbType="VarChar(50)")]
		public string Prerequis
		{
			get
			{
				return this._Prerequis;
			}
			set
			{
				if ((this._Prerequis != value))
				{
					this.OnPrerequisChanging(value);
					this.SendPropertyChanging();
					this._Prerequis = value;
					this.SendPropertyChanged("Prerequis");
					this.OnPrerequisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NbModules", DbType="VarChar(50)")]
		public string NbModules
		{
			get
			{
				return this._NbModules;
			}
			set
			{
				if ((this._NbModules != value))
				{
					this.OnNbModulesChanging(value);
					this.SendPropertyChanging();
					this._NbModules = value;
					this.SendPropertyChanged("NbModules");
					this.OnNbModulesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
